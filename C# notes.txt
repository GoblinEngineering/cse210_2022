you need to declare what type of variable something is right off the batt, and you cant change it later.

int x = 5;
OR ---
int x;
x = 5;

your print statment is 

Console.WriteLine(x); to go to the next line
or 
Console.Write(x); to stay on the same line
---------
variable types 

int - Integers (whole numbers, positive and negative)
string - Strings (a sequence of characters, including letters, numbers, or symbols)
float - Floating point numbers (numbers that use decimals)
double - Double precision floating point numbers (just like a float, except it takes up twice as much memory, so it can hold larger numbers or numbers with more decimal places)
bool - Boolean variables (true or false)

Console.ReadLine(); is your input statement, you need to print out your prompt with a write line as it doesnt accept text.

python to C conversion

PY
color = input("What is your favorite color? ")

C#
Console.Write("What is your favorite color? ");
string color = Console.ReadLine();

-------
In C#, curly braces {} define the body of an if statement or a function. In Python, the body is defined by indenting.
you still indent the body, but this is only a convention, the actual mechanism to define the body is the curly braces {}.

Also, in C#, you do not use a colon : to start the body, and when using if statements, you must always put the condition in parentheses ().

C#

if (x > y)
{
  Console.WriteLine("greater");
}

Python

if x > y:
  print("greater")
-------
As you may have noticed above, in C#, statements end with the semicolon ; character.
 Typically one statement will be one line, however, sometimes you may have a long statement that extends on multiple lines until the semicolon ; is reached.

The rule to end statements with semicolons applies to statements such as calling a function, declaring a variable, setting a variable, and so forth.
 You do not put a semicolon between the condition of an if statement and its body, or the name of a function and its body.
-------

for putting variables in strings use the $ sign instead of f.

PY
school = "BYU-Idaho"
print(f"I am studying at {school}.")

C#

string school = "BYU-Idaho";
Console.WriteLine($"I am studying at {school}.");
-----
while loop is self explanitory but now there is a do-while loop.
it runs through it once then at the end checks to see if the conditions make it go again.

string input;

do
{
    Console.Write("Do you want to continue? ");
    input = Console.ReadLine();
} while (input == "yes");

for loops are more like a "for X in range loop" and can be set up like so.

for (int i = 0; i < 10; i++)
{
    Console.WriteLine(i);
}

or 

for (int i = 2; i <= 20; i = i + 2)
{
    Console.WriteLine(i);
}

for each loops go through lists

foreach (string color in colors)
{
    Console.WriteLine(color);
}
----------
to get a random number from the computer In C#, this is done by creating an instance of the Random class, and then using it to get the next integer in a particular range.

Random randomGenerator = new Random();
int number = randomGenerator.Next(1, 11);
-----

layout of functions 

returnType FunctionName(dataType parameter1, dataType parameter2)
{
    // function_body
}